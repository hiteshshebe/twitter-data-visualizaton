import tweepy
from Tkinter import *
from time import sleep
from datetime import datetime
from textblob import TextBlob
import matplotlib.pyplot as plt
import numpy as np

#Authentication
consumer_key = ''
consumer_secret = ''
access_token = ''
access_token_secret = ''

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)

#GUI
root = Tk()


label1 = Label(root, text="SEARCH", width = 80, height = 5,fg = "white" ,bg = "blue")
E1 = Entry(root, bd =2)

label2 = Label(root, text="NUMBER OF TWIT", width = 80, height = 5, fg = "white",bg = "blue")
E2 = Entry(root, bd =2)

def getE1():
    return E1.get()

def getE2():
    return E2.get()

def getData():
    getE1()
    keyword = getE1()

    getE2()
    numberOfTweets = getE2()
    numberOfTweets = int(numberOfTweets)

    #Where the tweets are stored to be plotted
    i = 0;
    j = 0;
    k = 0;

    for tweet in tweepy.Cursor(api.search, keyword, lang="en").items(numberOfTweets):
        try:
            analysis = TextBlob(tweet.text)
            if analysis.sentiment.polarity > 0:
                i = i + 1
                print ('positive' + ' ' + tweet.text)

            elif analysis.sentiment.polarity == 0:
                j = j + 1
                print ('neutral' + ' ' + tweet.text)

            else:
                k = k + 1
                print ('negative' + ' ' + tweet.text)

        except tweepy.TweepError as e:
            print(e.reason)

        except StopIteration:
            break

    #Plotting
    objects = ('positive', 'neutral', 'negative')
    y_pos = np.arange(len(objects))
    performance = [i, j, k]
    time = datetime.now().strftime("At: %H:%M\nOn: %m-%d-%y")
    plt.bar(y_pos, performance, align='center', alpha=0.5, color = ('green','yellow','red') )
    plt.text(0, 1.25, "Sentiment for " + keyword + "\n" + time, fontsize=10,
             bbox=dict(facecolor='none', edgecolor='black',boxstyle='square, pad = 1'))

    plt.title("Sentiment of " + keyword + " on Twitter")
    plt.xticks(y_pos, objects)
    plt.ylabel("Number of Tweets")
    plt.xlabel("Sentiment for " + keyword)
    plt.show()

submit = Button(root, text ="Submit", command = getData)

label1.pack()
E1.pack()
label2.pack()
E2.pack()
submit.pack(side =BOTTOM)

root.mainloop()
